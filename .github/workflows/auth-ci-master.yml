name: AuthService CI/CD

on:
  push:
    branches: [ master ]
    paths:
      - 'CloudSealAPI/AuthService/**'
      - 'CloudSealAPI/AuthService.Tests/**'
      - '.github/workflows/auth-ci-master.yml'

  workflow_dispatch:

env:
  IMAGE_NAME: kubsnn/authservice
  DOCKERFILE_PATH: ./CloudSealAPI/AuthService/Dockerfile
  CONTEXT_PATH: ./CloudSealAPI
  CONTAINER_APP_NAME: cloudseal-auth
  RESOURCE_GROUP: cloudseal-rg

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Unit Tests
    defaults:
      run:
        working-directory: CloudSealAPI

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore CloudSealAPI.sln

      - name: Build
        run: dotnet build CloudSealAPI.sln --no-restore

      - name: Test
        run: dotnet test CloudSealAPI.sln --no-build --verbosity normal

  docker:
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT_PATH }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Azure Container Apps
    needs: docker

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy latest image to Container App
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.IMAGE_NAME }}:latest
